version: '3.8'

services:
  # Laravel Backend API
  backend:
    build:
      context: ./backend
      target: development
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=funlynk_dev
      - DB_USERNAME=funlynk
      - DB_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
    depends_on:
      - mysql
      - redis
    networks:
      - funlynk-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin Dashboard (React)
  admin-dashboard:
    build:
      context: ./admin-dashboard
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENV=development
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./admin-dashboard:/app
      - /app/node_modules
    networks:
      - funlynk-network
    depends_on:
      - backend

  # Mobile App Development Server
  mobile:
    build:
      context: ./mobile
      dockerfile: Dockerfile.dev
    ports:
      - "8081:8081"
    environment:
      - REACT_NATIVE_PACKAGER_HOSTNAME=0.0.0.0
      - API_URL=http://backend:8000
    volumes:
      - ./mobile:/app
      - /app/node_modules
    networks:
      - funlynk-network
    depends_on:
      - backend

  # MySQL Database
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=funlynk_dev
      - MYSQL_USER=funlynk
      - MYSQL_PASSWORD=password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - funlynk-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - funlynk-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - admin-dashboard
    networks:
      - funlynk-network

  # MailHog for email testing
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - funlynk-network

  # MinIO for S3-compatible storage
  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - funlynk-network

volumes:
  mysql_data:
  redis_data:
  minio_data:

networks:
  funlynk-network:
    driver: bridge
