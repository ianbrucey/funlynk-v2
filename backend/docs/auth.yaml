openapi: 3.0.3
info:
  title: FunLynk Authentication API
  description: Authentication endpoints for the FunLynk platform
  version: 1.0.0
  contact:
    name: FunLynk Team
    email: developers@funlynk.com

servers:
  - url: https://api.funlynk.com/v1
    description: Production server
  - url: https://staging-api.funlynk.com/v1
    description: Staging server
  - url: http://localhost:8000/api/v1
    description: Local development server

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      description: Authenticate a user and return an access token
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            examples:
              standard_login:
                summary: Standard login
                value:
                  email: user@example.com
                  password: password123
                  remember: false
              remember_me_login:
                summary: Remember me login
                value:
                  email: user@example.com
                  password: password123
                  remember: true
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
              examples:
                success:
                  summary: Successful login
                  value:
                    success: true
                    message: Login successful
                    data:
                      user:
                        id: 1
                        first_name: John
                        last_name: Doe
                        name: John Doe
                        email: user@example.com
                        email_verified_at: '2024-01-01T00:00:00Z'
                        phone: '+1234567890'
                        country_code: US
                        timezone: UTC
                        language: en
                        is_active: true
                        roles: ['user']
                        permissions: []
                      token: '1|abcdef123456...'
                      token_type: Bearer
                      expires_at: '2024-01-31T00:00:00Z'
        '422':
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                invalid_credentials:
                  summary: Invalid credentials
                  value:
                    success: false
                    message: Validation failed
                    errors:
                      email: ['The provided credentials do not match our records.']
                inactive_account:
                  summary: Inactive account
                  value:
                    success: false
                    message: Validation failed
                    errors:
                      email: ['Your account has been deactivated. Please contact support.']
        '429':
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/register:
    post:
      tags:
        - Authentication
      summary: User registration
      description: Register a new user account
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
            examples:
              minimal_registration:
                summary: Minimal registration
                value:
                  first_name: John
                  last_name: Doe
                  email: user@example.com
                  password: password123
                  password_confirmation: password123
              full_registration:
                summary: Full registration
                value:
                  first_name: John
                  last_name: Doe
                  email: user@example.com
                  password: password123
                  password_confirmation: password123
                  phone: '+1234567890'
                  country_code: US
                  date_of_birth: '1990-01-01'
                  gender: male
                  timezone: America/New_York
                  language: en
      responses:
        '201':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterResponse'
        '422':
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                email_taken:
                  summary: Email already taken
                  value:
                    success: false
                    message: Validation failed
                    errors:
                      email: ['The email address has already been taken.']
                password_mismatch:
                  summary: Password confirmation mismatch
                  value:
                    success: false
                    message: Validation failed
                    errors:
                      password: ['The password confirmation does not match.']
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/forgot-password:
    post:
      tags:
        - Authentication
      summary: Request password reset
      description: Send a password reset link to the user's email
      operationId: forgotPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
            examples:
              password_reset_request:
                summary: Password reset request
                value:
                  email: user@example.com
      responses:
        '200':
          description: Password reset link sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              examples:
                success:
                  summary: Reset link sent
                  value:
                    success: true
                    message: Password reset link sent to your email address.
        '422':
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                user_not_found:
                  summary: User not found
                  value:
                    success: false
                    message: Validation failed
                    errors:
                      email: ['We cannot find a user with that email address.']
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Reset password
      description: Reset user password using token from email
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
            examples:
              password_reset:
                summary: Password reset
                value:
                  email: user@example.com
                  token: abcdef123456...
                  password: newpassword123
                  password_confirmation: newpassword123
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '422':
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
              examples:
                invalid_token:
                  summary: Invalid token
                  value:
                    success: false
                    message: Validation failed
                    errors:
                      token: ['This password reset token is invalid.']
                expired_token:
                  summary: Expired token
                  value:
                    success: false
                    message: Validation failed
                    errors:
                      token: ['This password reset token has expired.']
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/me:
    get:
      tags:
        - Authentication
      summary: Get current user
      description: Get information about the currently authenticated user
      operationId: getCurrentUser
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User information retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/logout:
    post:
      tags:
        - Authentication
      summary: Logout
      description: Logout the current user and revoke their access token
      operationId: logout
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              examples:
                success:
                  summary: Logout successful
                  value:
                    success: true
                    message: Successfully logged out.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/logout-all:
    post:
      tags:
        - Authentication
      summary: Logout from all devices
      description: Logout the user from all devices by revoking all access tokens
      operationId: logoutAll
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout from all devices successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              examples:
                success:
                  summary: Logout from all devices successful
                  value:
                    success: true
                    message: Successfully logged out from all devices.
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh token
      description: Refresh the user's access token
      operationId: refreshToken
      security:
        - bearerAuth: []
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                remember:
                  type: boolean
                  description: Whether to create a long-lived token
                  example: false
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: User's email address
          example: user@example.com
        password:
          type: string
          format: password
          description: User's password
          example: password123
        remember:
          type: boolean
          description: Whether to remember the user (long-lived token)
          default: false
          example: false

    RegisterRequest:
      type: object
      required:
        - first_name
        - last_name
        - email
        - password
        - password_confirmation
      properties:
        first_name:
          type: string
          minLength: 2
          maxLength: 255
          description: User's first name
          example: John
        last_name:
          type: string
          minLength: 2
          maxLength: 255
          description: User's last name
          example: Doe
        email:
          type: string
          format: email
          maxLength: 255
          description: User's email address
          example: user@example.com
        password:
          type: string
          format: password
          minLength: 8
          description: User's password
          example: password123
        password_confirmation:
          type: string
          format: password
          description: Password confirmation
          example: password123
        phone:
          type: string
          maxLength: 20
          description: User's phone number
          example: '+1234567890'
        country_code:
          type: string
          maxLength: 5
          description: User's country code
          example: US
        date_of_birth:
          type: string
          format: date
          description: User's date of birth
          example: '1990-01-01'
        gender:
          type: string
          enum: [male, female, other]
          description: User's gender
          example: male
        timezone:
          type: string
          maxLength: 50
          description: User's timezone
          example: America/New_York
        language:
          type: string
          maxLength: 10
          description: User's preferred language
          example: en

    ForgotPasswordRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
          description: User's email address
          example: user@example.com

    ResetPasswordRequest:
      type: object
      required:
        - email
        - token
        - password
        - password_confirmation
      properties:
        email:
          type: string
          format: email
          description: User's email address
          example: user@example.com
        token:
          type: string
          description: Password reset token from email
          example: abcdef123456...
        password:
          type: string
          format: password
          minLength: 8
          description: New password
          example: newpassword123
        password_confirmation:
          type: string
          format: password
          description: Password confirmation
          example: newpassword123

    User:
      type: object
      properties:
        id:
          type: integer
          description: User's unique identifier
          example: 1
        first_name:
          type: string
          description: User's first name
          example: John
        last_name:
          type: string
          description: User's last name
          example: Doe
        name:
          type: string
          description: User's full name
          example: John Doe
        email:
          type: string
          format: email
          description: User's email address
          example: user@example.com
        email_verified_at:
          type: string
          format: date-time
          nullable: true
          description: Email verification timestamp
          example: '2024-01-01T00:00:00Z'
        phone:
          type: string
          nullable: true
          description: User's phone number
          example: '+1234567890'
        country_code:
          type: string
          nullable: true
          description: User's country code
          example: US
        date_of_birth:
          type: string
          format: date
          nullable: true
          description: User's date of birth
          example: '1990-01-01'
        gender:
          type: string
          nullable: true
          enum: [male, female, other]
          description: User's gender
          example: male
        timezone:
          type: string
          description: User's timezone
          example: UTC
        language:
          type: string
          description: User's preferred language
          example: en
        is_active:
          type: boolean
          description: Whether the user account is active
          example: true
        last_login_at:
          type: string
          format: date-time
          nullable: true
          description: Last login timestamp
          example: '2024-01-01T00:00:00Z'
        roles:
          type: array
          items:
            type: string
          description: User's roles
          example: ['user']
        permissions:
          type: array
          items:
            type: string
          description: User's permissions
          example: []
        created_at:
          type: string
          format: date-time
          description: Account creation timestamp
          example: '2024-01-01T00:00:00Z'
        updated_at:
          type: string
          format: date-time
          description: Account last update timestamp
          example: '2024-01-01T00:00:00Z'

    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Login successful
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            token:
              type: string
              description: Access token
              example: '1|abcdef123456...'
            token_type:
              type: string
              description: Token type
              example: Bearer
            expires_at:
              type: string
              format: date-time
              nullable: true
              description: Token expiration timestamp
              example: '2024-01-31T00:00:00Z'

    RegisterResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Registration successful
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            token:
              type: string
              description: Access token
              example: '1|abcdef123456...'
            token_type:
              type: string
              description: Token type
              example: Bearer
            expires_at:
              type: string
              format: date-time
              nullable: true
              description: Token expiration timestamp
              example: null

    UserResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: User information retrieved successfully
        data:
          $ref: '#/components/schemas/User'

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: Operation completed successfully

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: An error occurred
        error:
          type: string
          nullable: true
          example: Internal server error

    ValidationError:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Validation failed
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          example:
            email: ['The email field is required.']
            password: ['The password field is required.']
